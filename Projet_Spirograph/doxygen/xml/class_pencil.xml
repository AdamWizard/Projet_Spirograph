<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="class_pencil" kind="class" language="C++" prot="public">
    <compoundname>Pencil</compoundname>
    <basecompoundref prot="public" virt="non-virtual">sf::Drawable</basecompoundref>
    <includes refid="_pencil_8h" local="no">Pencil.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_pencil_1a83f52ba5a54d1098b419ff755b0143d4" prot="private" static="no" mutable="no">
        <type>sf::CircleShape *</type>
        <definition>sf::CircleShape* Pencil::circle</definition>
        <argsstring></argsstring>
        <name>circle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/git/Projet_Spirograph/Projet_Spirograph/headers/Pencil.h" line="129" column="25" bodyfile="D:/git/Projet_Spirograph/Projet_Spirograph/headers/Pencil.h" bodystart="129" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_pencil_1a39eff62a068d207e874e71f75b35da6a" prot="private" static="no" mutable="no">
        <type>sf::Color</type>
        <definition>sf::Color Pencil::color</definition>
        <argsstring></argsstring>
        <name>color</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/git/Projet_Spirograph/Projet_Spirograph/headers/Pencil.h" line="130" column="19" bodyfile="D:/git/Projet_Spirograph/Projet_Spirograph/headers/Pencil.h" bodystart="130" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_pencil_1a04781177835d958874b92e27a29a29fb" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float Pencil::rho</definition>
        <argsstring></argsstring>
        <name>rho</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/git/Projet_Spirograph/Projet_Spirograph/headers/Pencil.h" line="131" column="15" bodyfile="D:/git/Projet_Spirograph/Projet_Spirograph/headers/Pencil.h" bodystart="131" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_pencil_1a6aa946369040c73b3aea36b041e885cf" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float Pencil::phi</definition>
        <argsstring></argsstring>
        <name>phi</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/git/Projet_Spirograph/Projet_Spirograph/headers/Pencil.h" line="132" column="15" bodyfile="D:/git/Projet_Spirograph/Projet_Spirograph/headers/Pencil.h" bodystart="132" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_pencil_1a439864a152ae0d04c4c64237587a9d6e" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float Pencil::angSpeed</definition>
        <argsstring></argsstring>
        <name>angSpeed</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/git/Projet_Spirograph/Projet_Spirograph/headers/Pencil.h" line="133" column="15" bodyfile="D:/git/Projet_Spirograph/Projet_Spirograph/headers/Pencil.h" bodystart="133" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_pencil_1a073273f10085fa880341425e46c01b5c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Pencil::Pencil</definition>
        <argsstring>(sf::Color newColor, float newRho)</argsstring>
        <name>Pencil</name>
        <param>
          <type>sf::Color</type>
          <declname>newColor</declname>
        </param>
        <param>
          <type>float</type>
          <declname>newRho</declname>
        </param>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>newColor</parametername>
</parameternamelist>
<parameterdescription>
<para>an sf::Color. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>newRho</parametername>
</parameternamelist>
<parameterdescription>
<para>a float, the distance between the pencil and the center of the disc it&apos;s attached to. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An instantiated <ref refid="class_pencil" kindref="compound">Pencil</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/git/Projet_Spirograph/Projet_Spirograph/headers/Pencil.h" line="20" column="9" bodyfile="D:/git/Projet_Spirograph/Projet_Spirograph/src/Pencil.cpp" bodystart="7" bodyend="15"/>
      </memberdef>
      <memberdef kind="function" id="class_pencil_1acb035596d44b2d603b1480caa7a2ef0d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Pencil::~Pencil</definition>
        <argsstring>()</argsstring>
        <name>~Pencil</name>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
<para>Free the memory allocated by the <ref refid="class_pencil" kindref="compound">Pencil</ref> object </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/git/Projet_Spirograph/Projet_Spirograph/headers/Pencil.h" line="27" column="9" bodyfile="D:/git/Projet_Spirograph/Projet_Spirograph/src/Pencil.cpp" bodystart="17" bodyend="20"/>
      </memberdef>
      <memberdef kind="function" id="class_pencil_1abefbf4c6afe608af5d8f1b3aef128c9f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float Pencil::getX</definition>
        <argsstring>() const</argsstring>
        <name>getX</name>
        <briefdescription>
<para>Getter. </para>
        </briefdescription>
        <detaileddescription>
<para>A getter for the X coordinate of the <ref refid="class_pencil" kindref="compound">Pencil</ref>, located in circle-&gt;getPosition() <simplesect kind="return"><para>the X coordinate </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/git/Projet_Spirograph/Projet_Spirograph/headers/Pencil.h" line="35" column="15" bodyfile="D:/git/Projet_Spirograph/Projet_Spirograph/src/Pencil.cpp" bodystart="22" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="class_pencil_1a8451dd308ed3cfa8ea78db65b25bac18" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float Pencil::getY</definition>
        <argsstring>() const</argsstring>
        <name>getY</name>
        <briefdescription>
<para>Getter. </para>
        </briefdescription>
        <detaileddescription>
<para>A getter for the Y coordinate of the <ref refid="class_pencil" kindref="compound">Pencil</ref>, located in circle-&gt;getPosition() <simplesect kind="return"><para>the Y coordinate </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/git/Projet_Spirograph/Projet_Spirograph/headers/Pencil.h" line="43" column="15" bodyfile="D:/git/Projet_Spirograph/Projet_Spirograph/src/Pencil.cpp" bodystart="27" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="class_pencil_1a563ca1872ed31d0aff7137693c897657" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float Pencil::getRho</definition>
        <argsstring>() const</argsstring>
        <name>getRho</name>
        <briefdescription>
<para>Getter. </para>
        </briefdescription>
        <detaileddescription>
<para>A getter for the radius of the <ref refid="class_pencil" kindref="compound">Pencil</ref> (distance between it and the center of the <ref refid="class_disc" kindref="compound">Disc</ref> it&apos;s attached to) <simplesect kind="return"><para>the radius </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/git/Projet_Spirograph/Projet_Spirograph/headers/Pencil.h" line="52" column="15" bodyfile="D:/git/Projet_Spirograph/Projet_Spirograph/src/Pencil.cpp" bodystart="32" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="class_pencil_1a94d321ed1da0f27e33d03168eca656ee" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float Pencil::getPhi</definition>
        <argsstring>() const</argsstring>
        <name>getPhi</name>
        <briefdescription>
<para>Getter. </para>
        </briefdescription>
        <detaileddescription>
<para>A getter for the angle of the <ref refid="class_pencil" kindref="compound">Pencil</ref> between it and the horizontal axis <simplesect kind="return"><para>the angle </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/git/Projet_Spirograph/Projet_Spirograph/headers/Pencil.h" line="60" column="15" bodyfile="D:/git/Projet_Spirograph/Projet_Spirograph/src/Pencil.cpp" bodystart="37" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="class_pencil_1a92c87ae7d39510fa3b23ab226de6a35e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float Pencil::getAngSpeed</definition>
        <argsstring>() const</argsstring>
        <name>getAngSpeed</name>
        <briefdescription>
<para>Getter. </para>
        </briefdescription>
        <detaileddescription>
<para>A getter for the angular speed of the <ref refid="class_pencil" kindref="compound">Pencil</ref> <simplesect kind="return"><para>the angular speed </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/git/Projet_Spirograph/Projet_Spirograph/headers/Pencil.h" line="68" column="15" bodyfile="D:/git/Projet_Spirograph/Projet_Spirograph/src/Pencil.cpp" bodystart="42" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="class_pencil_1a772f15a320ef57167838c06ad77b3233" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>sf::Color</type>
        <definition>sf::Color Pencil::getColor</definition>
        <argsstring>() const</argsstring>
        <name>getColor</name>
        <briefdescription>
<para>Getter. </para>
        </briefdescription>
        <detaileddescription>
<para>A getter for the color of the <ref refid="class_pencil" kindref="compound">Pencil</ref> <simplesect kind="return"><para>the color </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/git/Projet_Spirograph/Projet_Spirograph/headers/Pencil.h" line="76" column="19" bodyfile="D:/git/Projet_Spirograph/Projet_Spirograph/src/Pencil.cpp" bodystart="47" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="class_pencil_1a81b159d3bcac62735928d8e223b0d47f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>sf::CircleShape *</type>
        <definition>sf::CircleShape * Pencil::getCircle</definition>
        <argsstring>()</argsstring>
        <name>getCircle</name>
        <briefdescription>
<para>Getter. </para>
        </briefdescription>
        <detaileddescription>
<para>A getter for the circle associated with the <ref refid="class_pencil" kindref="compound">Pencil</ref> <simplesect kind="return"><para>a pointer on the <ref refid="class_pencil" kindref="compound">Pencil</ref> circle </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/git/Projet_Spirograph/Projet_Spirograph/headers/Pencil.h" line="84" column="25" bodyfile="D:/git/Projet_Spirograph/Projet_Spirograph/src/Pencil.cpp" bodystart="52" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="class_pencil_1a09ac11e211a900dc4cc8b7bc0012b156" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Pencil::setPosition</definition>
        <argsstring>(float newX, float newY)</argsstring>
        <name>setPosition</name>
        <param>
          <type>float</type>
          <declname>newX</declname>
        </param>
        <param>
          <type>float</type>
          <declname>newY</declname>
        </param>
        <briefdescription>
<para>Setter. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>newX</parametername>
</parameternamelist>
<parameterdescription>
<para>a float for the X coordinate </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>newY</parametername>
</parameternamelist>
<parameterdescription>
<para>a float for the Y coordinate</para>
</parameterdescription>
</parameteritem>
</parameterlist>
A setter for the position of the <ref refid="class_pencil" kindref="compound">Pencil</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/git/Projet_Spirograph/Projet_Spirograph/headers/Pencil.h" line="93" column="14" bodyfile="D:/git/Projet_Spirograph/Projet_Spirograph/src/Pencil.cpp" bodystart="57" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="class_pencil_1a388148b0a11eb1d721d1b0a4b4e2f24e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Pencil::setPhi</definition>
        <argsstring>(float newPhi)</argsstring>
        <name>setPhi</name>
        <param>
          <type>float</type>
          <declname>newPhi</declname>
        </param>
        <briefdescription>
<para>Setter. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>newPhi</parametername>
</parameternamelist>
<parameterdescription>
<para>a float for the angle</para>
</parameterdescription>
</parameteritem>
</parameterlist>
A setter for the angle of the <ref refid="class_pencil" kindref="compound">Pencil</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/git/Projet_Spirograph/Projet_Spirograph/headers/Pencil.h" line="101" column="14" bodyfile="D:/git/Projet_Spirograph/Projet_Spirograph/src/Pencil.cpp" bodystart="62" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="class_pencil_1a4405a94c63fcd844db1466c33c981600" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Pencil::setAngSpeed</definition>
        <argsstring>(float newAngSpeed)</argsstring>
        <name>setAngSpeed</name>
        <param>
          <type>float</type>
          <declname>newAngSpeed</declname>
        </param>
        <briefdescription>
<para>Setter. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>angSpeed</parametername>
</parameternamelist>
<parameterdescription>
<para>a float for the angular speed</para>
</parameterdescription>
</parameteritem>
</parameterlist>
A setter for the angular speed of the <ref refid="class_pencil" kindref="compound">Pencil</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/git/Projet_Spirograph/Projet_Spirograph/headers/Pencil.h" line="109" column="14" bodyfile="D:/git/Projet_Spirograph/Projet_Spirograph/src/Pencil.cpp" bodystart="67" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="class_pencil_1a5d38c2072f6d5092dff0f492d7514981" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Pencil::setColor</definition>
        <argsstring>(sf::Color newColor)</argsstring>
        <name>setColor</name>
        <param>
          <type>sf::Color</type>
          <declname>newColor</declname>
        </param>
        <briefdescription>
<para>Setter. </para>
        </briefdescription>
        <detaileddescription>
<para>A setter for the color of the <ref refid="class_pencil" kindref="compound">Pencil</ref> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>newColor</parametername>
</parameternamelist>
<parameterdescription>
<para>an sf::Color for the color </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/git/Projet_Spirograph/Projet_Spirograph/headers/Pencil.h" line="117" column="14" bodyfile="D:/git/Projet_Spirograph/Projet_Spirograph/src/Pencil.cpp" bodystart="72" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="class_pencil_1a9d4b46e3caf03506cb408f338e647ded" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Pencil::draw</definition>
        <argsstring>(sf::RenderTarget &amp;target, sf::RenderStates states) const</argsstring>
        <name>draw</name>
        <param>
          <type>sf::RenderTarget &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type>sf::RenderStates</type>
          <declname>states</declname>
        </param>
        <briefdescription>
<para>Method to draw the moving structure. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>target</parametername>
</parameternamelist>
<parameterdescription>
<para>an sf::RenderTarget object in which the disc will be drawn (i.e the window) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>states</parametername>
</parameternamelist>
<parameterdescription>
<para>an sf::RenderStates object used by SFML to draw</para>
</parameterdescription>
</parameteritem>
</parameterlist>
This method is used to draw the <ref refid="class_spirograph" kindref="compound">Spirograph</ref> structure (Discs and Pencils white circles) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/git/Projet_Spirograph/Projet_Spirograph/headers/Pencil.h" line="126" column="22" bodyfile="D:/git/Projet_Spirograph/Projet_Spirograph/src/Pencil.cpp" bodystart="77" bodyend="80"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Class for the points generating the curve. </para>
    </briefdescription>
    <detaileddescription>
<para>A <ref refid="class_pencil" kindref="compound">Pencil</ref> object is a sf::CircleShape with a color and an angular speed that will adjust its position every frame </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>sf::Drawable</label>
      </node>
      <node id="1">
        <label>Pencil</label>
        <link refid="class_pencil"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>sf::Drawable</label>
      </node>
      <node id="1">
        <label>Pencil</label>
        <link refid="class_pencil"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="D:/git/Projet_Spirograph/Projet_Spirograph/headers/Pencil.h" line="11" column="1" bodyfile="D:/git/Projet_Spirograph/Projet_Spirograph/headers/Pencil.h" bodystart="12" bodyend="134"/>
    <listofallmembers>
      <member refid="class_pencil_1a439864a152ae0d04c4c64237587a9d6e" prot="private" virt="non-virtual"><scope>Pencil</scope><name>angSpeed</name></member>
      <member refid="class_pencil_1a83f52ba5a54d1098b419ff755b0143d4" prot="private" virt="non-virtual"><scope>Pencil</scope><name>circle</name></member>
      <member refid="class_pencil_1a39eff62a068d207e874e71f75b35da6a" prot="private" virt="non-virtual"><scope>Pencil</scope><name>color</name></member>
      <member refid="class_pencil_1a9d4b46e3caf03506cb408f338e647ded" prot="public" virt="virtual"><scope>Pencil</scope><name>draw</name></member>
      <member refid="class_pencil_1a92c87ae7d39510fa3b23ab226de6a35e" prot="public" virt="non-virtual"><scope>Pencil</scope><name>getAngSpeed</name></member>
      <member refid="class_pencil_1a81b159d3bcac62735928d8e223b0d47f" prot="public" virt="non-virtual"><scope>Pencil</scope><name>getCircle</name></member>
      <member refid="class_pencil_1a772f15a320ef57167838c06ad77b3233" prot="public" virt="non-virtual"><scope>Pencil</scope><name>getColor</name></member>
      <member refid="class_pencil_1a94d321ed1da0f27e33d03168eca656ee" prot="public" virt="non-virtual"><scope>Pencil</scope><name>getPhi</name></member>
      <member refid="class_pencil_1a563ca1872ed31d0aff7137693c897657" prot="public" virt="non-virtual"><scope>Pencil</scope><name>getRho</name></member>
      <member refid="class_pencil_1abefbf4c6afe608af5d8f1b3aef128c9f" prot="public" virt="non-virtual"><scope>Pencil</scope><name>getX</name></member>
      <member refid="class_pencil_1a8451dd308ed3cfa8ea78db65b25bac18" prot="public" virt="non-virtual"><scope>Pencil</scope><name>getY</name></member>
      <member refid="class_pencil_1a073273f10085fa880341425e46c01b5c" prot="public" virt="non-virtual"><scope>Pencil</scope><name>Pencil</name></member>
      <member refid="class_pencil_1a6aa946369040c73b3aea36b041e885cf" prot="private" virt="non-virtual"><scope>Pencil</scope><name>phi</name></member>
      <member refid="class_pencil_1a04781177835d958874b92e27a29a29fb" prot="private" virt="non-virtual"><scope>Pencil</scope><name>rho</name></member>
      <member refid="class_pencil_1a4405a94c63fcd844db1466c33c981600" prot="public" virt="non-virtual"><scope>Pencil</scope><name>setAngSpeed</name></member>
      <member refid="class_pencil_1a5d38c2072f6d5092dff0f492d7514981" prot="public" virt="non-virtual"><scope>Pencil</scope><name>setColor</name></member>
      <member refid="class_pencil_1a388148b0a11eb1d721d1b0a4b4e2f24e" prot="public" virt="non-virtual"><scope>Pencil</scope><name>setPhi</name></member>
      <member refid="class_pencil_1a09ac11e211a900dc4cc8b7bc0012b156" prot="public" virt="non-virtual"><scope>Pencil</scope><name>setPosition</name></member>
      <member refid="class_pencil_1acb035596d44b2d603b1480caa7a2ef0d" prot="public" virt="non-virtual"><scope>Pencil</scope><name>~Pencil</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
